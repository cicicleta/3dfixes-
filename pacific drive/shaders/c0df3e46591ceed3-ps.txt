
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v0.5.42 on Sun May 15 14:29:39 2022
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[39], immediateIndexed
dcl_constantbuffer CB1[143], immediateIndexed
dcl_constantbuffer CB2[22], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 4
add r0.x, -cb2[17].w, cb2[17].z
mad r0.x, cb2[17].y, r0.x, cb2[17].w
utof r0.yz, cb0[37].xxyx
add r0.yz, -r0.yyzy, v0.xxyx
mul r0.yz, r0.yyzy, cb0[38].zzwz
sample_indexable(texture2d)(float,float,float,float) r0.w, r0.yzyy, t1.yzwx, s1
add r0.x, -r0.x, r0.w
div_sat r0.x, r0.x, cb2[18].x



mul r1.xy, cb1[142].zzzz, cb2[2].xyxx

mad r1.xy, r0.yzyy, cb2[1].xyxx, r1.xyxx


//raindropps
mov r1.x, l(0.0)


sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t0.xyzw, s0
add r0.x, -r0.x, r1.w
add r0.x, r0.x, l(-1.000000)
log r0.x, |r0.x|
mul r2.xyz, r0.xxxx, cb2[4].xyzx
exp r2.xyz, r2.xyzx
add r2.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r2.w, l(1.000000)
mad r3.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r0.x, r3.xyxx, r3.xyxx
add r0.x, -r0.x, l(1.000000)
sqrt r3.z, r0.x
mul r1.xyw, r2.zzzw, r3.xyxz
dp3 r0.x, r1.xywx, r1.xywx
sqrt r0.x, r0.x
div r1.xyw, r1.xyxw, r0.xxxx
dp3 r0.x, r1.xywx, cb2[11].xyzx
log r0.w, |r0.x|
ge r0.x, l(0.000000), |r0.x|
mul r0.w, r0.w, cb2[20].z
exp r0.w, r0.w
mul r0.w, r2.y, r0.w
mul r0.w, r0.w, cb2[20].w
movc r0.x, r0.x, l(0), r0.w
mad r1.xy, r1.xyxx, cb2[5].xyxx, r0.yzyy
mad r0.yz, r0.yyzy, cb0[5].xxyx, cb0[4].xxyx
max r0.yz, r0.yyzy, cb0[6].xxyx
min r0.yz, r0.yyzy, cb0[6].zzwz
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t2.wxyz, s2
mad r1.xy, r1.xyxx, cb0[5].xyxx, cb0[4].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.yzw, r1.xyxx, t2.wxyz, s2
add r3.xyz, -r2.yzwy, cb2[8].xyzx
mad r2.yzw, cb2[19].zzzz, r3.xxyz, r2.yyzw
log r1.x, r1.w
ge r1.y, l(0.000000), r1.w
mul r1.x, r1.x, cb2[19].w
exp r1.x, r1.x
movc r1.x, r1.y, l(0), r1.x
mad r1.xyw, r2.yzyw, r1.xxxx, r0.xxxx
add r1.xyw, -r0.yzyw, r1.xyxw
mad r0.xyz, r2.xxxx, r1.xywx, r0.yzwy
add r1.xyw, -r0.xyxz, cb2[14].xyxz
log r0.w, r1.z
ge r1.z, l(0.000000), r1.z
mul r0.w, r0.w, cb2[21].x
exp r0.w, r0.w
mul r0.w, r0.w, cb2[17].y
mul r0.w, r0.w, cb2[21].y
movc r0.w, r1.z, l(0), r0.w
mad r0.xyz, r0.wwww, r1.xywx, r0.xyzx
add r1.xyz, -r0.xyzx, cb2[15].xyzx
mad r0.xyz, cb2[21].zzzz, r1.xyzx, r0.xyzx



max o0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o0.w, l(1.000000)
ret
// Approximately 0 instruction slots used
