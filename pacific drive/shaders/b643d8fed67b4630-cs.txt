// MANUALLY DUMPED [ShaderRegex\ShaderFixes\ShaderRegEx_UE4_UNIVERSAL2_C44.ini\_01_DynamicLights1][ShaderRegex\ShaderFixes\ShaderRegEx_UE4_UNIVERSAL2_C44.ini\_91_WaterSSR_1]
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Wed Oct 13 16:37:45 2021
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer cb0[97], dynamicIndexed
dcl_constantbuffer cb1[177], immediateIndexed
dcl_constantbuffer cb2[31], dynamicIndexed
dcl_constantbuffer cb3[5], immediateIndexed
dcl_constantbuffer cb4[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_buffer (float,float,float,float) t1
dcl_resource_buffer (uint,uint,uint,uint) t2
dcl_resource_buffer (uint,uint,uint,uint) t3
dcl_resource_texturecube (float,float,float,float) t4
dcl_resource_texture3d (float,float,float,float) t5
dcl_resource_texture3d (float,float,float,float) t6
dcl_resource_texture3d (float,float,float,float) t7
dcl_resource_texture3d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t9
dcl_uav_typed_texture3d (float,float,float,float) u0
dcl_input vThreadID.xyz
dcl_temps 40
dcl_thread_group 4, 4, 4
dcl_resource_texture2d (float,float,float,float) t125
dcl_resource_texture1d (float,float,float,float) t120
utof r0.xyz, vThreadID.xyzx
add r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
div r1.xy, r1.xyxx, cb4[1].xyxx
mad r1.xy, r1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r1.xy, r1.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
div r0.w, r1.z, cb4[2].z
exp r0.w, r0.w
add r0.w, r0.w, -cb4[2].y
div r0.w, r0.w, cb4[2].x
lt r1.z, cb1[27].w, l(1.000000)
add r1.w, r0.w, cb1[57].w
mul r1.w, r1.w, cb1[57].z
div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mad r0.w, r0.w, cb1[26].z, cb1[27].z
movc r0.w, r1.z, r1.w, r0.w
ld_indexable(texture2d)(float,float,float,float) r20.xyzw, l(0, 0, 0, 0), t125.xyzw



mul r2.xyzw, r1.yyyy, cb0[55].xyzw
mad r2.xyzw, r1.xxxx, cb0[54].xyzw, r2.xyzw
mad r2.xyzw, r0.wwww, cb0[56].xyzw, r2.xyzw
add r2.xyzw, r2.xyzw, cb0[57].xyzw
div r1.xyw, r2.xyxz, r2.wwww

add r1.xyw, r1.xyxw, -cb1[62].xyxz
mul r2.xyz, r1.yyyy, cb0[59].xywx
mad r2.xyz, r1.xxxx, cb0[58].xywx, r2.xyzx

mad r1.xyw, r1.wwww, cb0[60].xyxw, r2.xyxz
add r1.xyw, r1.xyxw, cb0[61].xyxw

div r1.xy, r1.xyxx, r1.wwww
mad r2.xy, r1.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.w, r1.w, cb1[176].x, cb1[176].y
log r0.w, r0.w
mul r0.w, r0.w, cb1[176].z
mul r2.z, r0.w, cb1[175].z





lt r1.xyw, r2.xyxz, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.w, r1.y, r1.x
or r0.w, r1.w, r0.w


lt r1.xyw, l(1.000000, 1.000000, 0.000000, 1.000000), r2.xyxz
or r1.x, r1.y, r1.x
or r1.x, r1.w, r1.x
or r0.w, r0.w, r1.x
movc r0.w, r0.w, l(0), cb0[70].x





lt r1.x, r0.w, l(0.001000)
ult r3.xyz, vThreadID.xyzx, cb4[0].xyzx
and r1.y, r3.y, r3.x
and r1.y, r3.z, r1.y
and r1.x, r1.y, r1.x
movc r1.x, r1.x, cb0[87].x, l(1)
lt r1.w, l(0.000000), cb0[92].x
lt r3.xy, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[96].yxyy
dp3 r2.w, cb2[5].xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r4.xyz, r2.wwww, cb4[6].xyzx
movc r4.xyz, r3.yyyy, r4.xyzx, cb2[5].xyzx
mad r2.w, -cb0[87].y, cb0[87].y, l(1.000000)



mad r3.z, cb0[87].y, cb0[87].y, l(1.000000)
mul r3.w, cb0[87].y, l(-2.000000)
imul null, r5.xy, vThreadID.xyxx, cb4[3].zwzz
lt r4.w, l(0.000000), cb3[2].z
iadd r5.z, cb2[1].z, l(-1)
ushr r5.xy, r5.xyxx, cb2[2].xxxx
iadd r6.xyz, vThreadID.xyzx, l(1, 1, 1, 0)
utof r6.xyz, r6.xyzx
mov r7.x, l(1.000000)
mul r8.xy, cb3[3].yxyy, l(1.000000, -1.000000, 0.000000, 0.000000)
mov r9.xyz, l(0,0,0,0)
mov r5.w, cb2[0].z
mov r6.w, cb2[7].x
mov r8.z, l(0)
loop
  uge r8.w, r8.z, r1.x
  breakc_nz r8.w
  add r10.xyz, r0.xyzx, cb0[r8.z + 71].xyzx
  div r10.xy, r10.xyxx, cb4[1].xyxx
  mad r10.xy, r10.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r10.xy, r10.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
  div r8.w, r10.z, cb4[2].z
  exp r8.w, r8.w
  add r8.w, r8.w, -cb4[2].y
  div r8.w, r8.w, cb4[2].x
  add r10.z, r8.w, cb1[57].w
  mul r10.z, r10.z, cb1[57].z
  div r10.z, l(1.000000, 1.000000, 1.000000, 1.000000), r10.z
  mad r10.w, r8.w, cb1[26].z, cb1[27].z
  movc r10.z, r1.z, r10.z, r10.w

  mul r11.xyzw, r10.yyyy, cb0[55].xyzw
  mad r11.xyzw, r10.xxxx, cb0[54].xyzw, r11.xyzw
  mad r10.xyzw, r10.zzzz, cb0[56].xyzw, r11.xyzw
  add r10.xyzw, r10.xyzw, cb0[57].xyzw


//Shader Fix 1/1

//div r10.xyz, r10.xyzx, r10.wwww
ld_indexable(texture2d)(float,float,float,float) r20.xyzw, l(0, 0, 0, 0), t125.xyzw
div r21.xyz, r10.xyzx, r10.wwww
mov r21.w, l(1.0)
mul r23.xyzw, r21.yyyy, cb1[1].xyzw
mad r23.xyzw, r21.xxxx, cb1[0].xyzw, r23.xyzw
mad r23.xyzw, r21.zzzz, cb1[2].xyzw, r23.xyzw
add r23.xyzw, r23.xyzw, cb1[3].xyzw

add r20.w, r23.w, -r20.y
mad r23.x, r20.w, -r20.x, r23.x

//this is for automatic right CB numbers later
ieq r22.x, l(62.0), l(57.0)
ieq r24.x, l(62.0), l(58.0)
ieq r24.y, l(62.0), l(62.0)
ieq r24.z, l(62.0), l(66.0)
ieq r24.w, l(62.0), l(70.0)

if_nz r22.x
mul r21.xyzw, r23.yyyy, cb1[33].xyzw
mad r21.xyzw, r23.xxxx, cb1[32].xyzw, r21.xyzw
mad r21.xyzw, r23.zzzz, cb1[34].xyzw, r21.xyzw
mad r21.xyzw, r23.wwww, cb1[35].xyzw, r21.xyzw
endif
if_nz r24.x
mul r21.xyzw, r23.yyyy, cb1[33].xyzw
mad r21.xyzw, r23.xxxx, cb1[32].xyzw, r21.xyzw
mad r21.xyzw, r23.zzzz, cb1[34].xyzw, r21.xyzw
mad r21.xyzw, r23.wwww, cb1[35].xyzw, r21.xyzw
endif
if_nz r24.y
mul r21.xyzw, r23.yyyy, cb1[37].xyzw
mad r21.xyzw, r23.xxxx, cb1[36].xyzw, r21.xyzw
mad r21.xyzw, r23.zzzz, cb1[38].xyzw, r21.xyzw
mad r21.xyzw, r23.wwww, cb1[39].xyzw, r21.xyzw
endif
if_nz r24.z
mul r21.xyzw, r23.yyyy, cb1[41].xyzw
mad r21.xyzw, r23.xxxx, cb1[40].xyzw, r21.xyzw
mad r21.xyzw, r23.zzzz, cb1[42].xyzw, r21.xyzw
mad r21.xyzw, r23.wwww, cb1[43].xyzw, r21.xyzw
endif
if_nz r24.w
mul r21.xyzw, r23.yyyy, cb1[41].xyzw
mad r21.xyzw, r23.xxxx, cb1[40].xyzw, r21.xyzw
mad r21.xyzw, r23.zzzz, cb1[42].xyzw, r21.xyzw
mad r21.xyzw, r23.wwww, cb1[43].xyzw, r21.xyzw
endif

mov r10.xyz, r21.xyzx

//Shader Fix 1/1

  add r10.xyz, r10.xyzx, -cb1[62].xyzx
  add r11.xyz, r10.xyzx, -cb1[59].xyzx

  dp3 r10.w, r11.xyzx, r11.xyzx
  sqrt r10.w, r10.w
  div r11.xyz, r11.xyzx, r10.wwww
  if_nz r5.w
    if_nz r3.x
      if_nz r6.w
        mov r11.w, r6.w
        mov r12.x, l(0)
        loop
          uge r12.y, r12.x, r6.w
          breakc_nz r12.y
          dp4 r12.y, cb2[8].xyzw, icb[r12.x + 0].xyzw
          lt r12.y, r8.w, r12.y
          if_nz r12.y
            mov r11.w, r12.x
            break
          endif
          iadd r12.x, r12.x, l(1)
        endloop
        ult r12.x, r11.w, r6.w
        if_nz r12.x
          ishl r12.x, r11.w, l(2)
          mul r13.xyzw, r10.yyyy, cb2[r12.x + 10].xyzw
          mad r13.xyzw, r10.xxxx, cb2[r12.x + 9].xyzw, r13.xyzw
          mad r13.xyzw, r10.zzzz, cb2[r12.x + 11].xyzw, r13.xyzw
          add r12.xyzw, r13.xyzw, cb2[r12.x + 12].xyzw
          div r12.xy, r12.xyxx, r12.wwww
          ge r13.xy, r12.xyxx, cb2[r11.w + 25].xyxx
          ge r13.zw, cb2[r11.w + 25].zzzw, r12.xxxy
          and r13.xy, r13.zwzz, r13.xyxx
          and r12.w, r13.y, r13.x
          if_nz r12.w
            sample_l_indexable(texture2d)(float,float,float,float) r12.x, r12.xyxx, t0.xyzw, s0, l(0.000000)
            add r12.x, r12.x, -cb2[30].x
            lt r12.x, r12.z, r12.x
            and r12.x, r12.x, l(0x3f800000)
          else
            mov r12.x, l(1.000000)
          endif
        else
          mov r12.x, l(1.000000)
        endif
      else
        mov r12.x, l(1.000000)
      endif
    else
      mov r12.x, l(1.000000)
    endif
    mul r12.yz, r10.yyyy, cb0[89].xxyx
    mad r12.yz, r10.xxxx, cb0[88].xxyx, r12.yyzy
    mad r12.yz, r10.zzzz, cb0[90].xxyx, r12.yyzy
    add r12.yz, r12.yyzy, cb0[91].xxyx
    mad r13.xy, r12.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r13.z, -r13.y, l(1.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r12.y, r13.xzxx, t9.yxzw, s3, l(0.000000)
    mul r12.x, r12.y, r12.x
    mul r12.x, r12.x, cb2[5].w
    dp3 r12.y, cb2[4].xyzx, -r11.xyzx
    mad r12.y, -r3.w, r12.y, r3.z
    log r12.y, r12.y
    mul r12.y, r12.y, l(1.500000)
    exp r12.y, r12.y
    mul r12.y, r12.y, l(12.566371)

ld_indexable(texture2d)(float,float,float,float) r20.xyzw, l(0, 0, 0, 0), t125.xyzw


    div r12.y, r2.w, r12.y
    mul r12.x, r12.y, r12.x
    mad r12.xyz, r4.xyzx, r12.xxxx, r9.xyzx
  else
    mov r12.xyz, r9.xyzx
  endif
  if_nz r1.w
    if_nz r3.y
      if_nz r4.w
        mad_sat r10.w, r10.w, cb3[4].x, cb3[4].y
        dp2 r13.x, r11.xyxx, r8.xyxx
        dp2 r13.y, r11.xyxx, cb3[3].xyxx
        mov r13.z, r11.z
        sample_l_indexable(texturecube)(float,float,float,float) r14.xyz, r13.xyzx, t4.xyzw, s1, l(0.000000)
        sample_l_indexable(texturecube)(float,float,float,float) r13.xyz, r13.xyzx, t4.xyzw, s1, cb3[4].z
        add r14.xyz, -r13.xyzx, r14.xyzx
        mad r13.xyz, r10.wwww, r14.xyzx, r13.xyzx
        mul r13.xyz, r13.xyzx, cb3[1].xyzx
      else
        mov r13.xyz, cb3[1].xyzx
      endif
      mul r13.xyz, r13.xyzx, l(0.282094806, 0.282094806, 0.282094806, 0.000000)
      max r13.xyz, r13.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    else
      mul r7.yzw, r11.yyzx, cb0[87].yyyy
      dp4 r14.x, cb0[93].xyzw, r7.xyzw
      dp4 r14.y, cb0[94].xyzw, r7.xyzw
      dp4 r14.z, cb0[95].xyzw, r7.xyzw
      max r7.yzw, r14.xxyz, l(0.000000, 0.000000, 0.000000, 0.000000)

      mul r7.yzw, r7.yyzw, cb1[155].xxyz

      mul r13.xyz, r7.yzwy, l(0.318309873, 0.318309873, 0.318309873, 0.000000)
    endif
    mad r12.xyz, cb0[92].xxxx, r13.xyzx, r12.xyzx
  endif
  mad r7.y, r8.w, cb2[3].x, cb2[3].y
  log r7.y, r7.y
  mul r7.y, r7.y, cb2[3].z
  max r7.y, r7.y, l(0.000000)
  ftou r7.y, r7.y
  umin r7.y, r5.z, r7.y
  imad r7.y, r7.y, cb2[1].y, r5.y
  imad r7.y, r7.y, cb2[1].x, r5.x
  ishl r7.z, r7.y, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.z, r7.zzzz, t2.yzxw
  umin r7.z, r7.z, cb2[0].x
  bfi r7.y, l(31), l(1), r7.y, l(1)
  ld_indexable(buffer)(uint,uint,uint,uint) r7.y, r7.yyyy, t2.yxzw
  add r13.xyz, r6.xyzx, cb0[r8.z + 71].xyzx
  div r13.xy, r13.xyxx, cb4[1].xyxx
  mad r13.xy, r13.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mul r13.xy, r13.xyxx, l(1.000000, -1.000000, 0.000000, 0.000000)
  div r7.w, r13.z, cb4[2].z
  exp r7.w, r7.w
  add r7.w, r7.w, -cb4[2].y
  div r7.w, r7.w, cb4[2].x
  add r8.w, r7.w, cb1[57].w
  mul r8.w, r8.w, cb1[57].z
  div r8.w, l(1.000000, 1.000000, 1.000000, 1.000000), r8.w
  mad r7.w, r7.w, cb1[26].z, cb1[27].z
  movc r7.w, r1.z, r8.w, r7.w
//skip this shader be cougth by another RegEx
//Shader Fix 1/1

ld_indexable(texture2d)(float,float,float,float) r31.xyzw, l(0, 0, 0, 0), t125.xyzw
ld_indexable(texture1d)(float,float,float,float) r36.xyzw, l(45, 0, 0, 0), t120.xyzw
ieq r37.x, r36.x, l(1.0)
if_nz r37.x
mad r13.x, -r7.w, r31.x, r13.x
endif
if_z r37.x
add r31.w, r7.w, -r31.y
mad r13.x, -r31.w, r31.x, r13.x
endif
//This line is for the SSR_SideFix RegEx
mov r34.x, r7.w
//Shader Fix 1/1

  mul r14.xyzw, r13.yyyy, cb0[55].xyzw

//skip this shader be cougth by another RegEx
  mad r13.xyzw, r13.xxxx, cb0[54].xyzw, r14.xyzw
  mad r13.xyzw, r7.wwww, cb0[56].xyzw, r13.xyzw
  add r13.xyzw, r13.xyzw, cb0[57].xyzw

  div r13.xyz, r13.xyzx, r13.wwww
  add r13.xyz, r13.xyzx, -cb1[62].xyzx
  add r13.xyz, r10.xyzx, -r13.xyzx
  dp3 r7.w, r13.xyzx, r13.xyzx
  sqrt r7.w, r7.w
  mul r7.w, r7.w, cb0[87].z
  max r7.w, r7.w, l(1.000000)
  mul r8.w, r7.w, r7.w
  mov r9.xyz, r12.xyzx
  mov r9.w, l(0)
  loop
    uge r10.w, r9.w, r7.z
    breakc_nz r10.w
    iadd r10.w, r7.y, r9.w
    ld_indexable(buffer)(uint,uint,uint,uint) r10.w, r10.wwww, t3.yzwx
    imul null, r12.w, r10.w, l(5)
    imad r13.x, r10.w, l(5), l(3)
    ld_indexable(buffer)(float,float,float,float) r13.xyz, r13.xxxx, t1.xywz
    ushr r13.w, r13.z, l(16)
    f16tof32 r13.w, r13.w
    lt r14.x, l(0.000000), r13.w
    if_nz r14.x
      ld_indexable(buffer)(float,float,float,float) r14.xyzw, r12.wwww, t1.xyzw
      imad r15.xyz, r10.wwww, l(5, 5, 5, 0), l(1, 2, 4, 0)
      ld_indexable(buffer)(float,float,float,float) r16.xyzw, r15.xxxx, t1.xyzw
      ld_indexable(buffer)(float,float,float,float) r15.xyw, r15.yyyy, t1.xywz
      ld_indexable(buffer)(float,float,float,float) r17.xyz, r15.zzzz, t1.xyzw
      f16tof32 r10.w, r13.z
      eq r12.w, r16.w, l(0.000000)
      lt r13.z, l(-2.000000), r13.x
      add r14.xyz, -r10.xyzx, r14.xyzx
      dp3 r15.z, r14.xyzx, r14.xyzx
      rsq r17.w, r15.z
      mul r18.xyz, r14.xyzx, r17.wwww
      mul r17.w, r14.w, r14.w
      mul r15.z, r15.z, r17.w
      mad r15.z, -r15.z, r15.z, l(1.000000)
      max r15.z, r15.z, l(0.000000)
      mul r15.z, r15.z, r15.z
      mul r19.xyz, r14.wwww, r14.xyzx
      dp3 r14.w, r19.xyzx, r19.xyzx
      min r14.w, r14.w, l(1.000000)
      add r14.w, -r14.w, l(1.000000)
      log r14.w, r14.w
      mul r14.w, r14.w, r16.w
      exp r14.w, r14.w
      movc r14.w, r12.w, r15.z, r14.w
      dp3 r15.x, r18.xyzx, r15.xywx
      add r13.x, -r13.x, r15.x
      mul_sat r13.x, r13.y, r13.x
      mul r13.x, r13.x, r13.x
      mul r13.x, r13.x, r14.w
      movc r13.x, r13.z, r13.x, r14.w
      mul r13.y, r10.w, l(0.500000)
      mad r15.xyz, -r13.yyyy, r17.xyzx, r14.xyzx
      lt r10.w, l(0.000000), r10.w
      if_nz r10.w
        mad r14.xyz, r13.yyyy, r17.xyzx, r14.xyzx
        dp3 r10.w, r15.xyzx, r15.xyzx
        dp3 r13.y, r14.xyzx, r14.xyzx
        rsq r10.w, r10.w
        rsq r13.y, r13.y
        mul r10.w, r10.w, r13.y
        dp3 r13.y, r15.xyzx, r14.xyzx
        mul r13.y, r10.w, r13.y
        mad r13.y, r13.y, l(0.500000), l(0.500000)
        mad r13.y, r8.w, r10.w, r13.y
        div r10.w, r10.w, r13.y
      else
        dp3 r13.y, r15.xyzx, r15.xyzx
        mad r13.y, r7.w, r7.w, r13.y
        rcp r10.w, r13.y
      endif
      movc r10.w, r12.w, r10.w, l(1.000000)
      mul r10.w, r13.x, r10.w
      dp3 r12.w, r18.xyzx, -r11.xyzx
      mad r12.w, -r3.w, r12.w, r3.z
      log r12.w, r12.w
      mul r12.w, r12.w, l(1.500000)
      exp r12.w, r12.w
      mul r12.w, r12.w, l(12.566371)
      div r12.w, r2.w, r12.w
      mul r10.w, r10.w, r12.w
      mul r10.w, r13.w, r10.w
      mad r9.xyz, r16.xyzx, r10.wwww, r9.xyzx
    endif
    iadd r9.w, r9.w, l(1)
  endloop
  iadd r8.z, r8.z, l(1)
endloop
utof r0.x, r1.x
div r0.xyz, r9.xyzx, r0.xxxx
mov r3.xyz, vThreadID.xyzx
mov r3.w, l(0)
ld_indexable(texture3d)(float,float,float,float) r1.xzw, r3.xyzw, t8.xwyz
add r0.xyz, r0.xyzx, r1.xzwx
ld_indexable(texture3d)(float,float,float,float) r4.xyzw, r3.xyzw, t5.xyzw
dp3 r1.x, r4.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
add r5.w, r1.x, r4.w
ld_indexable(texture3d)(float,float,float,float) r1.xzw, r3.xyzw, t6.xwyz
mad r5.xyz, r0.xyzx, r4.xyzx, r1.xzwx
lt r0.x, l(0.000000), r0.w
if_nz r0.x




  sample_l_indexable(texture3d)(float,float,float,float) r2.xyzw, r2.xyzx, t7.xyzw, s2, l(0.000000)
  


mov r21.x, r2.xyzw





  add r2.xyzw, -r5.xyzw, r2.xyzw


mul r21.x, cb1[24].x, l(0.5)
mul r0.w, r0.w, l(0.7)



  mad r5.xyzw, r0.wwww, r2.xyzw, r5.xyzw



endif




if_nz r1.y



  and r0.xyzw, r5.xyzw, l(0x7f800000, 0x7f800000, 0x7f800000, 0x7f800000)




  ieq r0.xyzw, r0.xyzw, l(0x7f800000, 0x7f800000, 0x7f800000, 0x7f800000)



  movc r0.xyzw, r0.xyzw, l(0,0,0,0), r5.xyzw
  store_uav_typed u0.xyzw, vThreadID.xyzz, r0.xyzw
endif
ret
// Approximately 0 instruction slots used
