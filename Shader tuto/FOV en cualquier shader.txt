//Water lake
/////////////////////////////// HLSL Code /////////////////////////////////
 // ---- Created with 3Dmigoto v0.6.164 on Sun Oct 27 01:23:52 2024
 Texture2D<float4> t8 : register(t8);

 Texture2D<float4> t7 : register(t7);

 Texture2D<float4> t6 : register(t6);

 Texture2DArray<float4> t5 : register(t5);

 Texture2D<float4> t4 : register(t4);

 Texture2D<float4> t3 : register(t3);

 Texture2D<float4> t2 : register(t2);

 Texture2D<float4> t1 : register(t1);

 TextureCube<float4> t0 : register(t0);

 SamplerState s5_s : register(s5);

 SamplerState s4_s : register(s4);

 SamplerState s3_s : register(s3);

 SamplerState s2_s : register(s2);

 SamplerState s1_s : register(s1);

 SamplerState s0_s : register(s0);

 cbuffer cb0 : register(b0)
 {
   float4 cb0[800];
 }

 cbuffer cb10 : register(b10)
 {
   float4 cb10[100];
 }
 
  cbuffer cb13 : register(b13)
 {
   float4 cb13[100];
 }


 // 3Dmigoto declarations
 #define cmp -
 Texture1D<float4> IniParams : register(t120);
 Texture2D<float4> StereoParams : register(t125);
 #include "matrix.hlsl" 

 void main(
   float4 v0 : SV_POSITION0,
   float3 v1 : NORMAL0,
   float3 v2 : COLOR0,
   float4 v3 : TEXCOORD0,
   float4 v4 : TEXCOORD1,
   float4 v5 : TEXCOORD2,
   out float4 o0 : SV_Target0)
 {
   float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11;
   uint4 bitmask, uiDest;
   float4 fDest;
   
   
float4 s = StereoParams.Load(0);
float4 texFilter = IniParams.Load(int2(14,0));
float4 menu = IniParams.Load(int2(15,0));
float4 testeo = IniParams.Load(int2(90,0));
float4 gameplay  = IniParams.Load(int2(10,0));

matrix mp = MATRIX(cb13, 76);
matrix MV = MATRIX(cb10, 9);
float det = 1 / determinant(MV);
float3 mi;
mi.x = ((MV._m11 * MV._m22) - (MV._m21 * MV._m12)) * det;
mi.y = ((MV._m21 * MV._m02) - (MV._m01 * MV._m22)) * det;
mi.z = ((MV._m01 * MV._m12) - (MV._m11 * MV._m02)) * det;
float fov = 1 / dot(mi, mp._m00_m10_m20);   
//float fov = 1.32999897;
//float fov = cb13[76].x*cb13[76].x+cb13[77].x*cb13[77].x+cb13[78].x*cb13[78].x;

   r0.xyz = cb0[20].xyz + -v4.xyz;

r0.x+=s.x*s.y*cb10[9].x* fov;
r0.y+=s.x*s.y*cb10[10].x*fov;
r0.z+=s.x*s.y*cb10[11].x*fov; 
      
   r0.w = dot(r0.xyz, r0.xyz);
   r0.w = rsqrt(r0.w);
   r0.xyz = r0.xyz * r0.www;
   r1.xyz = v5.xyz / v5.www;
   r0.w = cb0[23].z * r1.z + cb0[23].w;
   r0.w = 1 / r0.w;
   r1.zw = max(float2(9.99999975e-05,9.99999975e-05), r1.xy);
   r1.zw = min(float2(0.999899983,0.999899983), r1.zw);
   r2.x = t3.SampleLevel(s3_s, r1.zw, 0).x;
   r2.yz = cmp(asint(cb0[773].wx) == int2(1,1));
   r2.w = cmp(0.999000013 < v2.x);
   r2.y = (int)r2.w | (int)r2.y;
   r2.w = r2.y ? 1.000000 : 0;
   r3.xyz = cb0[20].xyz + -v3.xyz;
   r3.x = dot(r3.xyz, r3.xyz);
   r3.x = sqrt(r3.x);
   r3.y = (int)cb0[787].w;
   r3.z = (int)r3.y + -1;
   r3.w = cmp((int)r3.z >= 0);
   if (r3.w != 0) {
     r4.z = (int)r3.z;
     r3.w = -1 + cb0[787].w;
     r4.w = cmp(r3.w == r4.z);
     if (r4.w != 0) {
       r4.w = 0.5 * cb0[762].z;
       r4.w = max(500, r4.w);
       r4.w = r3.x / r4.w;
       r4.w = min(1, r4.w);
       r4.w = 1.25 + -r4.w;
       r4.w = min(1, r4.w);
     } else {
       r5.x = cb0[r3.z+784].x * cb0[787].z;
       r5.x = saturate(r3.x / r5.x);
       r5.y = r5.x * r5.x;
       r4.w = -r5.y * r5.x + 1;
     }
     r5.x = cmp(r4.w >= 0.00999999978);
     if (r5.x != 0) {
       r5.x = cmp(asint(cb0[775].x) == 1);
       r5.y = cmp((int)r3.z == 0);
       r5.x = r5.y ? r5.x : 0;
       if (r5.x != 0) {
         r5.x = cb0[r3.z+780].x * cb0[787].z;
		 r5.xyzw = v3.xxzz / r5.xxxx;
         r5.xyzw = r5.xyzw * cb0[788].zzww + float4(-0.5,-0.5,-0.5,-0.5);
         r6.xyzw = frac(r5.yyww);
         r5.xyzw = -r6.xyzw + r5.xyzw;
         r6.xyz = float3(1,2,3) + -r6.yyy;
         r7.xyz = r6.xyz * r6.xyz;
         r8.xy = r7.xy * r6.xy;
         r8.yz = float2(4,4) * r8.xy;
         r9.xy = r7.zy * r6.zy + -r8.zy;
         r9.z = r8.x * 6 + r9.x;
         r6.x = -r7.x * r6.x + 6;
         r6.x = r6.x + -r9.y;
         r9.w = r6.x + -r9.z;
         r9.x = r8.x;
         r7.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r9.xyzw;
         r6.xyz = float3(1,2,3) + -r6.www;
         r8.xyz = r6.xyz * r6.xyz;
         r9.xy = r8.xy * r6.xy;
         r9.yz = float2(4,4) * r9.xy;
         r10.xy = r8.zy * r6.zy + -r9.zy;
         r10.z = r9.x * 6 + r10.x;
         r6.x = -r8.x * r6.x + 6;
         r6.x = r6.x + -r10.y;
         r10.w = r6.x + -r10.z;
         r10.x = r9.x;
         r6.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r10.xzyw;
         r5.xyzw = float4(-0.5,1.5,-0.5,1.5) + r5.xyzw;
         r8.xy = r7.xz + r7.yw;
         r8.zw = r6.xy + r6.zw;
         r6.xy = r7.yw;
         r6.xyzw = r6.xyzw / r8.xyzw;
         r5.xyzw = r6.xyzw + r5.xyzw;
         r5.xyzw = cb0[788].xyxy * r5.yzxw;
         r6.xyw = r5.zyw;
         r6.z = 0;
         r7.xyz = t5.Sample(s5_s, r6.xyz).xyz;
         r5.z = 0;
         r9.xyz = t5.Sample(s5_s, r5.xyz).xyz;
         r6.xyz = t5.Sample(s5_s, r6.xwz).xyz;
         r5.w = r6.w;
         r5.xyz = t5.Sample(s5_s, r5.xwz).xyz;
         r8.yw = r8.xz + r8.yw;
         r8.xy = r8.xz / r8.yw;
         r6.xyz = r6.xyz + -r5.xyz;
         r5.xyz = r8.xxx * r6.xyz + r5.xyz;
         r6.xyz = -r9.xyz + r7.xyz;
         r6.xyz = r8.xxx * r6.xyz + r9.xyz;
         r6.xyz = r6.xyz + -r5.xyz;
         r5.xyz = r8.yyy * r6.xyz + r5.xyz;
         r5.xyz = r5.yxz * r4.www;
         r6.xy = r5.yz;
       } else {
         r5.w = cb0[r3.z+780].x * cb0[787].z;
		 r4.xy = v3.xz / r5.ww;
         r4.xyz = t5.Sample(s5_s, r4.xyz).xyz;
         r5.xyz = r4.www * r4.yxz;
         r6.xy = r5.yz;
       }
       r6.z = 1;
       r4.x = dot(r6.xyz, r6.xyz);
       r4.x = rsqrt(r4.x);
       r4.xyz = r6.xyz * r4.xxx;
     } else {
       r4.xyz = float3(0,0,1);
       r5.x = 0;
     }
     r3.z = (int)r3.y + -2;
     r3.y = cmp((int)r3.z >= 0);
     r4.w = ~(int)r3.y;
     if (r3.y != 0) {
       r6.z = (int)r3.z;
       r3.y = cmp(r3.w == r6.z);
       if (r3.y != 0) {
         r3.y = 0.5 * cb0[762].z;
         r3.y = max(500, r3.y);
         r3.y = r3.x / r3.y;
         r3.y = min(1, r3.y);
         r3.y = 1.25 + -r3.y;
         r3.y = min(1, r3.y);
       } else {
         r3.w = cb0[r3.z+784].x * cb0[787].z;
         r3.w = saturate(r3.x / r3.w);
         r5.y = r3.w * r3.w;
         r3.y = -r5.y * r3.w + 1;
       }
       r3.w = cmp(r3.y >= 0.00999999978);
       if (r3.w != 0) {
         r3.w = cmp(asint(cb0[775].x) == 1);
         r5.y = cmp((int)r3.z == 0);
         r3.w = r3.w ? r5.y : 0;
         if (r3.w != 0) {
           r3.w = cb0[r3.z+780].x * cb0[787].z;
           r7.xyzw = v3.xxzz / r3.wwww;
           r7.xyzw = r7.xyzw * cb0[788].zzww + float4(-0.5,-0.5,-0.5,-0.5);
           r8.xyzw = frac(r7.yyww);
           r7.xyzw = -r8.xyzw + r7.xyzw;
           r5.yzw = float3(1,2,3) + -r8.yyy;
           r8.xyz = r5.yzw * r5.yzw;
           r9.xy = r8.xy * r5.yz;
           r9.yz = float2(4,4) * r9.xy;
           r10.xy = r8.zy * r5.wz + -r9.zy;
           r10.z = r9.x * 6 + r10.x;
           r3.w = -r8.x * r5.y + 6;
           r3.w = r3.w + -r10.y;
           r10.w = r3.w + -r10.z;
           r10.x = r9.x;
           r9.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r10.xyzw;
           r5.yzw = float3(1,2,3) + -r8.www;
           r8.xyz = r5.yzw * r5.yzw;
           r10.xy = r8.xy * r5.yz;
           r10.yz = float2(4,4) * r10.xy;
           r11.xy = r8.zy * r5.wz + -r10.zy;
           r11.z = r10.x * 6 + r11.x;
           r3.w = -r8.x * r5.y + 6;
           r3.w = r3.w + -r11.y;
           r11.w = r3.w + -r11.z;
           r11.x = r10.x;
           r8.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r11.xzyw;
           r7.xyzw = float4(-0.5,1.5,-0.5,1.5) + r7.xyzw;
           r10.xy = r9.xz + r9.yw;
           r10.zw = r8.xy + r8.zw;
           r8.xy = r9.yw;
           r8.xyzw = r8.xyzw / r10.xyzw;
           r7.xyzw = r8.xyzw + r7.xyzw;
           r7.xyzw = cb0[788].xyxy * r7.yzxw;
           r8.xyw = r7.zyw;
           r8.z = 0;
           r5.yzw = t5.Sample(s5_s, r8.xyz).xyz;
           r7.z = 0;
           r9.xyz = t5.Sample(s5_s, r7.xyz).xyz;
           r8.xyz = t5.Sample(s5_s, r8.xwz).xyz;
           r7.w = r8.w;
           r7.xyz = t5.Sample(s5_s, r7.xwz).xyz;
           r10.yw = r10.xz + r10.yw;
           r10.xy = r10.xz / r10.yw;
           r8.xyz = r8.xyz + -r7.xyz;
           r7.xyz = r10.xxx * r8.xyz + r7.xyz;
           r5.yzw = -r9.xyz + r5.yzw;
           r5.yzw = r10.xxx * r5.yzw + r9.xyz;
           r5.yzw = r5.yzw + -r7.xyz;
           r5.yzw = r10.yyy * r5.yzw + r7.xyz;
           r5.yzw = r5.ywz * r3.yyy;
         } else {
           r3.w = cb0[r3.z+780].x * cb0[787].z;
           r6.xy = v3.xz / r3.ww;
           r6.xyz = t5.Sample(s5_s, r6.xyz).xyz;
           r5.yzw = r6.xzy * r3.yyy;
         }
         r5.x = r5.x + r5.w;
         r4.xy = r5.yz + r4.xy;
         r3.y = dot(r4.xyz, r4.xyz);
         r3.y = rsqrt(r3.y);
         r4.xyz = r4.xyz * r3.yyy;
       }
     }
   } else {
     r5.x = 0;
     r4.xyzw = float4(0,0,1,-1);
   }
   if (r4.w == 0) {
     r3.z = (int)r3.z + -1;
     r3.y = cmp((int)r3.z >= 0);
     r3.w = ~(int)r3.y;
     if (r3.y != 0) {
       r6.z = (int)r3.z;
       r3.y = -1 + cb0[787].w;
       r3.y = cmp(r3.y == r6.z);
       if (r3.y != 0) {
         r3.y = 0.5 * cb0[762].z;
         r3.y = max(500, r3.y);
         r3.y = r3.x / r3.y;
         r3.y = min(1, r3.y);
         r3.y = 1.25 + -r3.y;
         r3.y = min(1, r3.y);
       } else {
         r4.w = cb0[r3.z+784].x * cb0[787].z;
         r4.w = saturate(r3.x / r4.w);
         r5.y = r4.w * r4.w;
         r3.y = -r5.y * r4.w + 1;
       }
       r4.w = cmp(r3.y >= 0.00999999978);
       if (r4.w != 0) {
         r4.w = cmp(asint(cb0[775].x) == 1);
         r5.y = cmp((int)r3.z == 0);
         r4.w = r4.w ? r5.y : 0;
         if (r4.w != 0) {
           r4.w = cb0[r3.z+780].x * cb0[787].z;
           r7.xyzw = v3.xxzz / r4.wwww;
           r7.xyzw = r7.xyzw * cb0[788].zzww + float4(-0.5,-0.5,-0.5,-0.5);
           r8.xyzw = frac(r7.yyww);
           r7.xyzw = -r8.xyzw + r7.xyzw;
           r5.yzw = float3(1,2,3) + -r8.yyy;
           r8.xyz = r5.yzw * r5.yzw;
           r9.xy = r8.xy * r5.yz;
           r9.yz = float2(4,4) * r9.xy;
           r10.xy = r8.zy * r5.wz + -r9.zy;
           r10.z = r9.x * 6 + r10.x;
           r4.w = -r8.x * r5.y + 6;
           r4.w = r4.w + -r10.y;
           r10.w = r4.w + -r10.z;
           r10.x = r9.x;
           r9.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r10.xyzw;
           r5.yzw = float3(1,2,3) + -r8.www;
           r8.xyz = r5.yzw * r5.yzw;
           r10.xy = r8.xy * r5.yz;
           r10.yz = float2(4,4) * r10.xy;
           r11.xy = r8.zy * r5.wz + -r10.zy;
           r11.z = r10.x * 6 + r11.x;
           r4.w = -r8.x * r5.y + 6;
           r4.w = r4.w + -r11.y;
           r11.w = r4.w + -r11.z;
           r11.x = r10.x;
           r8.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r11.xzyw;
           r7.xyzw = float4(-0.5,1.5,-0.5,1.5) + r7.xyzw;
           r10.xy = r9.xz + r9.yw;
           r10.zw = r8.xy + r8.zw;
           r8.xy = r9.yw;
           r8.xyzw = r8.xyzw / r10.xyzw;
           r7.xyzw = r8.xyzw + r7.xyzw;
           r7.xyzw = cb0[788].xyxy * r7.yzxw;
           r8.xyw = r7.zyw;
           r8.z = 0;
           r5.yzw = t5.Sample(s5_s, r8.xyz).xyz;
           r7.z = 0;
           r9.xyz = t5.Sample(s5_s, r7.xyz).xyz;
           r8.xyz = t5.Sample(s5_s, r8.xwz).xyz;
           r7.w = r8.w;
           r7.xyz = t5.Sample(s5_s, r7.xwz).xyz;
           r10.yw = r10.xz + r10.yw;
           r10.xy = r10.xz / r10.yw;
           r8.xyz = r8.xyz + -r7.xyz;
           r7.xyz = r10.xxx * r8.xyz + r7.xyz;
           r5.yzw = -r9.xyz + r5.yzw;
           r5.yzw = r10.xxx * r5.yzw + r9.xyz;
           r5.yzw = r5.yzw + -r7.xyz;
           r5.yzw = r10.yyy * r5.yzw + r7.xyz;
           r5.yzw = r5.ywz * r3.yyy;
         } else {
           r4.w = cb0[r3.z+780].x * cb0[787].z;
		   r6.xy = v3.xz / r4.ww;
           r6.xyz = t5.Sample(s5_s, r6.xyz).xyz;
           r5.yzw = r6.xzy * r3.yyy;
         }
         r5.x = r5.x + r5.w;
         r4.xy = r5.yz + r4.xy;
         r3.y = dot(r4.xyz, r4.xyz);
         r3.y = rsqrt(r3.y);
         r4.xyz = r4.xyz * r3.yyy;
       }
     }
   } else {
     r3.w = -1;
   }
   if (r3.w == 0) {
     r3.z = (int)r3.z + -1;
     r3.y = cmp((int)r3.z >= 0);
     r3.w = ~(int)r3.y;
     if (r3.y != 0) {
       r6.z = (int)r3.z;
       r3.y = -1 + cb0[787].w;
       r3.y = cmp(r3.y == r6.z);
       if (r3.y != 0) {
         r3.y = 0.5 * cb0[762].z;
         r3.y = max(500, r3.y);
         r3.y = r3.x / r3.y;
         r3.y = min(1, r3.y);
         r3.y = 1.25 + -r3.y;
         r3.y = min(1, r3.y);
       } else {
         r4.w = cb0[r3.z+784].x * cb0[787].z;
         r4.w = saturate(r3.x / r4.w);
         r5.y = r4.w * r4.w;
         r3.y = -r5.y * r4.w + 1;
       }
       r4.w = cmp(r3.y >= 0.00999999978);
       if (r4.w != 0) {
         r4.w = cmp(asint(cb0[775].x) == 1);
         r5.y = cmp((int)r3.z == 0);
         r4.w = r4.w ? r5.y : 0;
         if (r4.w != 0) {
           r4.w = cb0[r3.z+780].x * cb0[787].z;
           r7.xyzw = v3.xxzz / r4.wwww;
           r7.xyzw = r7.xyzw * cb0[788].zzww + float4(-0.5,-0.5,-0.5,-0.5);
           r8.xyzw = frac(r7.yyww);
           r7.xyzw = -r8.xyzw + r7.xyzw;
           r5.yzw = float3(1,2,3) + -r8.yyy;
           r8.xyz = r5.yzw * r5.yzw;
           r9.xy = r8.xy * r5.yz;
           r9.yz = float2(4,4) * r9.xy;
           r10.xy = r8.zy * r5.wz + -r9.zy;
           r10.z = r9.x * 6 + r10.x;
           r4.w = -r8.x * r5.y + 6;
           r4.w = r4.w + -r10.y;
           r10.w = r4.w + -r10.z;
           r10.x = r9.x;
           r9.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r10.xyzw;
           r5.yzw = float3(1,2,3) + -r8.www;
           r8.xyz = r5.yzw * r5.yzw;
           r10.xy = r8.xy * r5.yz;
           r10.yz = float2(4,4) * r10.xy;
           r11.xy = r8.zy * r5.wz + -r10.zy;
           r11.z = r10.x * 6 + r11.x;
           r4.w = -r8.x * r5.y + 6;
           r4.w = r4.w + -r11.y;
           r11.w = r4.w + -r11.z;
           r11.x = r10.x;
           r8.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r11.xzyw;
           r7.xyzw = float4(-0.5,1.5,-0.5,1.5) + r7.xyzw;
           r10.xy = r9.xz + r9.yw;
           r10.zw = r8.xy + r8.zw;
           r8.xy = r9.yw;
           r8.xyzw = r8.xyzw / r10.xyzw;
           r7.xyzw = r8.xyzw + r7.xyzw;
           r7.xyzw = cb0[788].xyxy * r7.yzxw;
           r8.xyw = r7.zyw;
           r8.z = 0;
           r5.yzw = t5.Sample(s5_s, r8.xyz).xyz;
           r7.z = 0;
           r9.xyz = t5.Sample(s5_s, r7.xyz).xyz;
           r8.xyz = t5.Sample(s5_s, r8.xwz).xyz;
           r7.w = r8.w;
           r7.xyz = t5.Sample(s5_s, r7.xwz).xyz;
           r10.yw = r10.xz + r10.yw;
           r10.xy = r10.xz / r10.yw;
           r8.xyz = r8.xyz + -r7.xyz;
           r7.xyz = r10.xxx * r8.xyz + r7.xyz;
           r5.yzw = -r9.xyz + r5.yzw;
           r5.yzw = r10.xxx * r5.yzw + r9.xyz;
           r5.yzw = r5.yzw + -r7.xyz;
           r5.yzw = r10.yyy * r5.yzw + r7.xyz;
           r5.yzw = r5.ywz * r3.yyy;
         } else {
           r4.w = cb0[r3.z+780].x * cb0[787].z;
		   r6.xy = v3.xz / r4.ww;
           r6.xyz = t5.Sample(s5_s, r6.xyz).xyz;
           r5.yzw = r6.xzy * r3.yyy;
         }
         r5.x = r5.x + r5.w;
         r4.xy = r5.yz + r4.xy;
         r3.y = dot(r4.xyz, r4.xyz);
         r3.y = rsqrt(r3.y);
         r4.xyz = r4.xyz * r3.yyy;
       }
     }
   } else {
     r3.w = -1;
   }
   if (r3.w == 0) {
     r3.y = (int)r3.z + -1;
     r3.z = cmp((int)r3.y >= 0);
     if (r3.z != 0) {
       r6.z = (int)r3.y;
       r3.z = -1 + cb0[787].w;
       r3.z = cmp(r3.z == r6.z);
       if (r3.z != 0) {
         r3.z = 0.5 * cb0[762].z;
         r3.z = max(500, r3.z);
         r3.z = r3.x / r3.z;
         r3.z = min(1, r3.z);
         r3.z = 1.25 + -r3.z;
         r3.z = min(1, r3.z);
       } else {
         r3.w = cb0[r3.y+784].x * cb0[787].z;
         r3.x = saturate(r3.x / r3.w);
         r3.w = r3.x * r3.x;
         r3.z = -r3.w * r3.x + 1;
       }
       r3.x = cmp(r3.z >= 0.00999999978);
       if (r3.x != 0) {
         r3.x = cmp(asint(cb0[775].x) == 1);
         r3.w = cmp((int)r3.y == 0);
         r3.x = r3.w ? r3.x : 0;
         if (r3.x != 0) {
           r3.x = cb0[r3.y+780].x * cb0[787].z;
           r7.xyzw = v3.xxzz / r3.xxxx;
           r7.xyzw = r7.xyzw * cb0[788].zzww + float4(-0.5,-0.5,-0.5,-0.5);
           r8.xyzw = frac(r7.yyww);
           r7.xyzw = -r8.xyzw + r7.xyzw;
           r5.yzw = float3(1,2,3) + -r8.yyy;
           r8.xyz = r5.yzw * r5.yzw;
           r3.xw = r8.xy * r5.yz;
           r9.xy = float2(4,4) * r3.xw;
           r9.xy = r8.zy * r5.wz + -r9.yx;
           r9.z = r3.x * 6 + r9.x;
           r3.w = -r8.x * r5.y + 6;
           r3.w = r3.w + -r9.y;
           r9.w = r3.w + -r9.z;
           r9.x = r3.x;
           r9.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r9.xyzw;
           r5.yzw = float3(1,2,3) + -r8.www;
           r8.xyz = r5.yzw * r5.yzw;
           r3.xw = r8.xy * r5.yz;
           r10.xy = float2(4,4) * r3.xw;
           r10.xy = r8.zy * r5.wz + -r10.yx;
           r10.z = r3.x * 6 + r10.x;
           r3.w = -r8.x * r5.y + 6;
           r3.w = r3.w + -r10.y;
           r10.w = r3.w + -r10.z;
           r10.x = r3.x;
           r8.xyzw = float4(0.166666672,0.166666672,0.166666672,0.166666672) * r10.xzyw;
           r7.xyzw = float4(-0.5,1.5,-0.5,1.5) + r7.xyzw;
           r10.xy = r9.xz + r9.yw;
           r10.zw = r8.xy + r8.zw;
           r8.xy = r9.yw;
           r8.xyzw = r8.xyzw / r10.xyzw;
           r7.xyzw = r8.xyzw + r7.xyzw;
           r7.xyzw = cb0[788].xyxy * r7.yzxw;
           r8.xyw = r7.zyw;
           r8.z = 0;
           r5.yzw = t5.Sample(s5_s, r8.xyz).xyz;
           r7.z = 0;
           r9.xyz = t5.Sample(s5_s, r7.xyz).xyz;
           r8.xyz = t5.Sample(s5_s, r8.xwz).xyz;
           r7.w = r8.w;
           r7.xyz = t5.Sample(s5_s, r7.xwz).xyz;
           r3.xw = r10.xz + r10.yw;
           r3.xw = r10.xz / r3.xw;
           r8.xyz = r8.xyz + -r7.xyz;
           r7.xyz = r3.xxx * r8.xyz + r7.xyz;
           r5.yzw = -r9.xyz + r5.yzw;
           r5.yzw = r3.xxx * r5.yzw + r9.xyz;
           r5.yzw = r5.yzw + -r7.xyz;
           r5.yzw = r3.www * r5.yzw + r7.xyz;
           r5.yzw = r5.ywz * r3.zzz;
         } else {
           r3.x = cb0[r3.y+780].x * cb0[787].z;
           r6.xy = v3.xz / r3.xx;
           r3.xyw = t5.Sample(s5_s, r6.xyz).xyz;
           r5.yzw = r3.zzz * r3.xwy;
         }
         r5.x = r5.x + r5.w;
         r4.xy = r5.yz + r4.xy;
         r3.x = dot(r4.xyz, r4.xyz);
         r3.x = rsqrt(r3.x);
         r4.xy = r4.xy * r3.xx;
       }
     }
   }
   r3.xz = r2.ww * r4.xy + v1.xz;
   r3.y = v1.y;
   r3.w = dot(r3.xyz, r3.xyz);
   r3.w = rsqrt(r3.w);
   r3.xyz = r3.xyz * r3.www;
   if (cb0[774].y != 0) {
     r3.w = cb0[23].z * r2.x + cb0[23].w;
     r3.w = 1 / r3.w;
     r3.w = saturate(r3.w + -r0.w);
     r3.w = cb0[764].x * r3.w;
     r4.x = dot(r3.xyz, -r0.xyz);
     r4.y = dot(-r0.xyz, -r0.xyz);
	 r4.y = 0.768899977 * r4.y;
     r4.z = r4.x * r4.x;
     r4.y = r4.y / r4.z;
     r4.y = 1 + r4.y;
     r4.y = sqrt(r4.y);
     r4.y = -1 + r4.y;
     r4.x = r4.y * r4.x;
     r4.xyz = r4.xxx * r3.xyz + -r0.xyz;
     r4.xyz = r4.xyz * r3.www;
     r4.w = 0.400000006 * r4.y;
     r4.xyz = v3.xyz + r4.xwz;
	 r5.yzw = cb0[77].xyw * r4.yyy;
     r4.xyw = cb0[76].xyw * r4.xxx + r5.yzw;
     r4.xyz = cb0[78].xyw * r4.zzz + r4.xyw;
     r4.xyz = cb0[79].xyw + r4.xyz;
	 r6.xz = float2(0.5,0.5) * r4.xz;
     r3.w = cb0[21].x * r4.y;
     r6.w = 0.5 * r3.w;
     r4.xy = r6.xw + r6.zz;
     r4.xy = r4.xy / r4.zz;
     r4.zw = cmp(r4.xy >= float2(0.995000005,0.995000005));
     r5.yz = float2(1.99000001,1.99000001) + -r4.xy;
     r4.xy = r4.zw ? r5.yz : r4.xy;
     r4.zw = cmp(float2(0,0) >= r4.xy);
     r4.xy = r4.zw ? -r4.xy : r4.xy;
   } else {
     r4.zw = cb0[764].yy * r3.xz;
     r4.zw = float2(0.5,0.5) * r4.zw;
     r4.xy = r2.ww * r4.zw + r1.xy;
   }
   if (cb0[774].z != 0) {
     r4.zw = -cb0[778].xy * cb0[764].zz + r4.xy;
     r4.zw = max(float2(9.99999975e-05,9.99999975e-05), r4.zw);
     r4.zw = min(float2(0.999899983,0.999899983), r4.zw);
     r5.y = t4.SampleLevel(s4_s, r4.zw, 0).x;
     r4.zw = max(float2(9.99999975e-05,9.99999975e-05), r4.xy);
     r4.zw = min(float2(0.999899983,0.999899983), r4.zw);
     r5.z = t4.SampleLevel(s4_s, r4.zw, 0).y;
     r4.zw = cb0[778].xy * cb0[764].zz + r4.xy;
     r4.zw = max(float2(9.99999975e-05,9.99999975e-05), r4.zw);
     r4.zw = min(float2(0.999899983,0.999899983), r4.zw);
     r5.w = t4.SampleLevel(s4_s, r4.zw, 0).z;
   } else {
     r4.zw = max(float2(9.99999975e-05,9.99999975e-05), r4.xy);
     r4.zw = min(float2(0.999899983,0.999899983), r4.zw);
     r5.yzw = t4.SampleLevel(s4_s, r4.zw, 0).xyz;
   }
   r3.w = dot(-r0.xyz, r3.xyz);
   r3.w = r3.w + r3.w;
   r6.xyz = r3.xyz * -r3.www + -r0.xyz;
   if (r2.z != 0) {
     r7.xyz = cb0[766].xyz;
   } else {
     r8.xyzw = t0.SampleLevel(s2_s, r6.xyz, cb0[767].x).xyzw;
     r2.z = -1 + r8.w;
     r2.z = cb0[3].w * r2.z + 1;
     r2.z = max(0, r2.z);
     r2.z = log2(r2.z);
     r2.z = cb0[3].y * r2.z;
     r2.z = exp2(r2.z);
     r2.z = cb0[3].x * r2.z;
     r8.xyz = r2.zzz * r8.xyz;
     r7.xyz = max(float3(0,0,0), r8.xyz);
   }
   r8.xyz = cb0[77].xyw * -r6.yyy;
   r6.xyw = cb0[76].xyw * r6.xxx + r8.xyz;
   r6.xyz = cb0[78].xyw * r6.zzz + r6.xyw;

//convergence 0 good   r6.x += s.x * r6.z 
r6.x += s.x * r6.z  ;	    
   
   r4.zw = r6.xy / r6.zz;
   r4.zw = r4.zw * float2(0.5,0.5) + float2(0.5,0.5);
   r2.z = 1 + -r4.w;
   r6.y = -cb0[765].z + r2.z;
   r2.z = r4.z * 2 + -1;
   r2.z = 1 + -abs(r2.z);
   r3.w = r4.z * 0.980000019 + 0.00999999978;
   r4.z = r4.z + -r3.w;
   r6.x = r2.z * r4.z + r3.w;
   r4.zw = -cb0[798].xy * float2(0.5,0.5) + float2(1,1);
   r4.zw = min(r6.xy, r4.zw);
   r4.zw = cb0[799].xy * r4.zw;
   r6.xy = cb0[798].zw * r4.zw;
   r6.zw = ddx_coarse(r6.xy);
   r6.xy = ddy_coarse(r6.xy);
   r2.z = dot(r6.zw, r6.zw);
   r3.w = dot(r6.xy, r6.xy);
   r2.z = max(r3.w, r2.z);
   r2.z = log2(r2.z);
   r2.z = 0.5 * r2.z;
   r2.z = max(0, r2.z);
   r2.z = min(4, r2.z);
   r6.xyzw = t8.SampleLevel(s2_s, r4.zw, r2.z).wxyz;
   r6.x = saturate(r6.x);
   r6.yzw = r6.yzw + -r7.xyz;
   r6.xyz = r6.xxx * r6.yzw + r7.xyz;
   r2.z = cmp((int)r2.y == 0);
   r3.w = cmp(asint(cb0[774].w) == 3);
   r2.z = (int)r2.z | (int)r3.w;
   r7.xz = float2(0,0);
   r7.y = 0.5 * cb0[787].y;
   r7.xyz = v3.xyz + -r7.xyz;
   r7.xyz = cb0[20].xyz + -r7.xyz;
   r3.w = dot(r7.xyz, r7.xyz);
   r3.w = rsqrt(r3.w);
   r3.w = saturate(r7.y * r3.w);
   r2.z = r2.z ? 0.25 : r3.w;
   r4.zw = max(float2(9.99999975e-05,9.99999975e-05), r4.xy);
   r4.zw = min(float2(0.999899983,0.999899983), r4.zw);
   r3.w = t3.SampleLevel(s3_s, r4.zw, 0).x;
   r4.zw = r4.xy * float2(2,2) + float2(-1,-1);
   r7.xy = cb0[169].yw * -r4.ww;
   r4.zw = cb0[168].yw * r4.zz + r7.xy;
   r4.zw = cb0[170].yw * r3.ww + r4.zw;
   r4.zw = cb0[171].yw + r4.zw;
   r4.z = r4.z / r4.w;
   r4.w = 0.25 + v3.y;
   r4.z = cmp(r4.w < r4.z);
   r2.y = r2.y ? r4.z : 0;
   if (r2.y != 0) {
     r2.y = cb0[23].z * r2.x + cb0[23].w;
     r2.y = 1 / r2.y;
     r2.y = r2.y + -r0.w;
     r2.y = r2.y * r2.z;
     r5.yzw = t4.SampleLevel(s4_s, r1.zw, 0).xyz;
     r7.xyzw = t7.SampleLevel(s1_s, r1.xy, 0).xyzw;
   } else {
     r7.xyzw = t7.SampleLevel(s1_s, r4.xy, 0).xyzw;
     r1.z = cb0[23].z * r3.w + cb0[23].w;
     r1.z = 1 / r1.z;
     r1.z = r1.z + -r0.w;
     r2.y = r1.z * r2.z;
   }
   r1.z = max(0, r2.y);
   r1.zw = float2(-5,25) * r1.zz;
   r1.zw = r1.zw / cb0[763].xx;
   r1.z = 1.44269502 * r1.z;
   r1.z = exp2(r1.z);
   r1.z = 1 + -r1.z;
   r1.z = max(0, r1.z);
   r4.xyz = max(float3(0.100000001,0.100000001,0.100000001), cb0[761].xyz);
   r4.xyz = min(float3(0.949999988,0.949999988,0.949999988), r4.xyz);
   r4.xyz = log2(r4.xyz);
   r4.xyz = r4.xyz * r1.www;
   r4.xyz = exp2(r4.xyz);
   r8.xyz = cb0[761].xyz * cb0[761].xyz;
   r9.xyz = cb0[761].xyz * r8.xyz;
   r8.xyz = r8.xyz * r8.xyz;
   r9.xyz = r9.xyz * r8.xyz;
   r8.xyz = r8.xyz * r8.xyz;
   r8.xyz = r9.xyz * r8.xyz;
   r8.xyz = r8.xyz * r7.xyz;
   r9.xyz = float3(0.0500000007,0.0500000007,0.0500000007) * r8.xyz;
   r8.xyz = -r8.xyz * float3(0.0500000007,0.0500000007,0.0500000007) + r5.yzw;
   r4.xyz = r4.xyz * r8.xyz + r9.xyz;
   r7.xyz = cb0[760].xyz * r7.xyz + -r5.yzw;
   r5.yzw = r1.zzz * r7.xyz + r5.yzw;
   r5.yzw = r5.yzw + -r4.xyz;
   r4.xyz = cb0[763].yyy * r5.yzw + r4.xyz;
   r1.z = cmp(0.5 < r7.w);
   r1.z = r1.z ? 1.000000 : 0;
   r5.yz = float2(1,1) + -cb0[790].xy;
   r5.yz = min(r5.yz, r1.xy);
   r5.yz = cb0[793].xy * r5.yz;
   r1.w = t6.SampleLevel(s1_s, r5.yz, 0).w;
   r2.z = dot(r4.xyz, float3(0.333000004,0.333000004,0.333000004));
   r5.yzw = float3(0.75,0.75,0.75) * r4.xyz;
   r5.yzw = r2.zzz * float3(0.25,0.25,0.25) + r5.yzw;
   r1.z = r1.w * r1.z;
   r5.yzw = r1.zzz * r5.yzw;
   r1.z = saturate(-cb0[763].x * 0.00999999978 + 1);
   r5.yzw = r5.yzw * r1.zzz;
   r4.xyz = r5.yzw * float3(5,5,5) + r4.xyz;
   if (cb0[773].z != 0) {
     r1.z = t7.SampleLevel(s1_s, r1.xy, 0).w;
     r5.yz = cb0[771].yy * v3.xz;
     r5.yz = t2.SampleLevel(s0_s, r5.yz, 0).xy;
     r1.w = cb0[771].x * r2.y;
     r2.y = saturate(r1.w);
     r2.y = 1 + -r2.y;
     r1.w = saturate(3 * r1.w);
     r1.w = 1 + -r1.w;
     r2.y = r2.y * r5.y;
     r1.w = r1.w * r5.z;
     r1.w = max(r2.y, r1.w);
     r1.w = saturate(5 * r1.w);
     r2.y = saturate(dot(r3.xyz, cb0[6].xyz));
     r5.yzw = cb0[7].xyz * r2.yyy;
     r7.xyzw = cb0[772].xyzw * r1.wwww;
     r5.yzw = r5.yzw * r1.zzz;
     r5.yzw = cb0[757].xyz * float3(0.5,0.5,0.5) + r5.yzw;
     r5.yzw = r7.xyz * r5.yzw + -r4.xyz;
     r4.xyz = r7.www * r5.yzw + r4.xyz;
   }
   if (cb0[773].y != 0) {
     r1.x = t7.SampleLevel(s1_s, r1.xy, 0).w;
     r1.y = cmp(cb0[787].y < 7);
     if (r1.y == 0) {
       r1.y = r5.x * r2.w;
       r1.zw = cb0[769].yy * v3.xz;
       r1.zw = t1.SampleLevel(s0_s, r1.zw, 0).xy;
       r1.zw = r1.yy * r1.zw;
       r1.w = 0.25 * r1.w;
       r1.z = max(r1.z, r1.w);
       r5.xyz = cb0[761].xyz * r1.yyy;
       r5.xyz = float3(0.300000012,0.300000012,0.300000012) * r5.xyz;
       r1.yzw = saturate(r1.zzz * float3(0.699999988,0.699999988,0.699999988) + r5.xyz);
       r2.y = saturate(dot(r3.xyz, cb0[6].xyz));
       r5.xyz = cb0[7].xyz * r2.yyy;
       r7.xyz = cb0[770].xyz * r1.yzw;
       r5.xyz = r5.xyz * r1.xxx;
       r5.xyz = cb0[757].xyz * float3(0.5,0.5,0.5) + r5.xyz;
       r5.xyz = r7.xyz * r5.xyz;
       r7.xyz = float3(0.5,0.5,0.5) * r4.xyz;
       r5.xyz = max(r7.xyz, r5.xyz);
       r1.xyz = cb0[770].www * r1.yzw;
       r5.xyz = r5.xyz + -r4.xyz;
       r4.xyz = r1.xyz * r5.xyz + r4.xyz;
     }
   }
   r0.x = saturate(dot(r3.xyz, r0.xyz));
   r0.x = 1 + -r0.x;
   r0.y = 0.970000029 * r0.x;
   r0.y = r0.y * r0.x;
   r0.y = r0.y * r0.x;
   r0.y = r0.y * r0.x;
   r0.x = r0.y * r0.x + 0.0299999993;
   r0.x = r0.x * r2.w;
   r1.xyz = r6.xyz * r2.www + -r4.xyz;
   r0.xyz = r0.xxx * r1.xyz + r4.xyz;
   r1.x = cmp(0 < asint(cb0[756].y));
   r1.y = r0.w * cb0[58].z + cb0[58].w;
   r1.z = -cb0[58].y * r0.w;
   r1.z = exp2(r1.z);
   r2.yzw = cmp(asint(cb0[756].yyy) == int3(1,2,3));
   r1.w = -cb0[58].x * cb0[58].x;
   r3.x = r0.w * r0.w;
   r1.w = r3.x * r1.w;
   r1.w = exp2(r1.w);
   r1.w = r2.w ? r1.w : 0;
   r1.z = r2.z ? r1.z : r1.w;
   r1.y = saturate(r2.y ? r1.y : r1.z);
   r1.y = 1 + -r1.y;
   r2.yzw = r1.xxx ? cb0[59].xyz : 0;
   r1.x = r1.x ? r1.y : 0;
   r1.yzw = r2.yzw + -r0.xyz;
   r1.xyz = r1.xxx * r1.yzw;
   r1.w = asint(cb0[756].y);
   r1.w = saturate(r1.w);
   r0.xyz = r1.www * r1.xyz + r0.xyz;
   r0.xyz = max(float3(0,0,0), r0.xyz);
   r1.x = min(v2.y, v2.z);
   r1.x = min(v2.x, r1.x);
   r1.y = ddx_coarse(r1.x);
   r1.z = ddy_coarse(r1.x);
   r1.y = abs(r1.y) + abs(r1.z);
   r1.y = 0.5 * r1.y;
   r1.x = cmp(r1.y < r1.x);
   r1.xyz = r1.xxx ? r0.xyz : float3(0.949999988,0.949999988,0.949999988);
   o0.xyz = cb0[773].www ? r1.xyz : r0.xyz;
   r0.x = cb0[23].z * r2.x + cb0[23].w;
   r0.x = 1 / r0.x;
   r0.x = r0.x + -r0.w;
   o0.w = saturate(8 * r0.x);
   return;
 }

