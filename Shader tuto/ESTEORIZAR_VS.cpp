//Geometry VS 3. Always stereoized in ShaderFixesDM.
// ---- Created with geo-11 v0.6.193 on Tue Apr 30 19:38:27 2024
cbuffer cb3 : register(b3)
{
  float4 cb3[2];
}

cbuffer cb2 : register(b2)
{
  float4 cb2[4];
}

cbuffer cb1 : register(b1)
{
  float4 cb1[7];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[73];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float3 v1 : NORMAL0,
  float2 v2 : TEXCOORD0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float p1 : TEXCOORD4,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2,
  out float4 o4 : TEXCOORD3)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  float4 stereo = StereoParams.Load(0);
  
  r0.xyzw = cb1[1].xyzw * v0.yyyy;
  r0.xyzw = cb1[0].xyzw * v0.xxxx + r0.xyzw;
  r0.xyzw = cb1[2].xyzw * v0.zzzz + r0.xyzw;
  r1.xyzw = cb1[3].xyzw + r0.xyzw;
  r0.xyz = cb1[3].xyz * v0.www + r0.xyz;
  r2.xyzw = cb0[70].xyzw * r1.yyyy;
  r2.xyzw = cb0[69].xyzw * r1.xxxx + r2.xyzw;
  r2.xyzw = cb0[71].xyzw * r1.zzzz + r2.xyzw;
  o0.xyzw = cb0[72].xyzw * r1.wwww + r2.xyzw;
  o1.xy = v2.xy * cb3[1].xy + cb3[1].zw;
  p1.x = 0;
  r1.x = dot(v1.xyz, cb1[4].xyz);
  r1.y = dot(v1.xyz, cb1[5].xyz);
  r1.z = dot(v1.xyz, cb1[6].xyz);
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = max(1.17549435e-38, r0.w);
  r0.w = rsqrt(r0.w);
  o2.xyz = r1.xyz * r0.www;
  o3.xyz = r0.xyz;
  
  //float fov = cb1[0].x*cb1[0].x+cb1[1].x*cb1[1].x+cb1[2].x*cb1[2].x;
  //o3.x+=stereo.x*stereo.y*cb1[0].x/fov;
  //o3.y+=stereo.x*stereo.y*cb1[1].x/fov;
  //o3.z+=stereo.x*stereo.y*cb1[2].x/fov;
  
  r1.xyz = cb2[1].xyz * r0.yyy;
  r0.xyw = cb2[0].xyz * r0.xxx + r1.xyz;
  r0.xyz = cb2[2].xyz * r0.zzz + r0.xyw;
  o4.xyz = cb2[3].xyz + r0.xyz;
  o4.w = 0;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v0.6.193 on Tue Apr 30 19:38:27 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// NORMAL                   0   xyz         1     NONE   float   xyz
// TEXCOORD                 0   xy          2     NONE   float   xy
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy
// TEXCOORD                 4     z         1     NONE   float     z
// TEXCOORD                 1   xyz         2     NONE   float   xyz
// TEXCOORD                 2   xyz         3     NONE   float   xyz
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer CB0[73], immediateIndexed
dcl_constantbuffer CB1[7], immediateIndexed
dcl_constantbuffer CB2[4], immediateIndexed
dcl_constantbuffer CB3[2], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.z
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyzw
dcl_temps 3
mul r0.xyzw, v0.yyyy, cb1[1].xyzw
mad r0.xyzw, cb1[0].xyzw, v0.xxxx, r0.xyzw
mad r0.xyzw, cb1[2].xyzw, v0.zzzz, r0.xyzw
add r1.xyzw, r0.xyzw, cb1[3].xyzw
mad r0.xyz, cb1[3].xyzx, v0.wwww, r0.xyzx
mul r2.xyzw, r1.yyyy, cb0[70].xyzw
mad r2.xyzw, cb0[69].xyzw, r1.xxxx, r2.xyzw
mad r2.xyzw, cb0[71].xyzw, r1.zzzz, r2.xyzw
mad o0.xyzw, cb0[72].xyzw, r1.wwww, r2.xyzw
mad o1.xy, v2.xyxx, cb3[1].xyxx, cb3[1].zwzz
mov o1.z, l(0)
dp3 r1.x, v1.xyzx, cb1[4].xyzx
dp3 r1.y, v1.xyzx, cb1[5].xyzx
dp3 r1.z, v1.xyzx, cb1[6].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
max r0.w, r0.w, l(1.175494351E-38)
rsq r0.w, r0.w
mul o2.xyz, r0.wwww, r1.xyzx
mov o3.xyz, r0.xyzx
mul r1.xyz, r0.yyyy, cb2[1].xyzx
mad r0.xyw, cb2[0].xyxz, r0.xxxx, r1.xyxz
mad r0.xyz, cb2[2].xyzx, r0.zzzz, r0.xywx
add o4.xyz, r0.xyzx, cb2[3].xyzx
mov o4.w, l(0)
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
