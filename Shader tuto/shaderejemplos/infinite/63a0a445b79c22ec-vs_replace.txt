//Stars skybox VS 1.
// ---- Created with 3Dmigoto v0.6.163 on Sat May 18 23:43:36 2024

cbuffer _Globals : register(b0)
{
  float4 mLC[3] : packoffset(c0);
  float4 vConst : packoffset(c3);
  float4 vPhaze : packoffset(c4);
  float4 vTable[16] : packoffset(c5);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float v1 : PSIZE0,
  float4 v2 : COLOR0,
  out float o0 : PSIZE0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1)
{
  float4 r0,r1,r2;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  float4 stereo = StereoParams.Load(0);
  
  r0.x = vPhaze.x + v2.w;
  r0.y = frac(r0.x);
  r0.x = vPhaze.y * r0.x;
  r0.x = frac(r0.x);
  r0.y = r0.y * vPhaze.y + -r0.x;
  r0.y = (int)r0.y;
  r1.xyzw = r0.xxxx * float4(3,3,3,3) + float4(1,0,-1,-2);
  r2.xyzw = r0.xxxx * float4(-3,-3,-3,-3) + float4(1,2,3,4);
  r1.xyzw = saturate(min(r2.xyzw, r1.xyzw));
  r0.x = dot(vTable[r0.y].xyzw, r1.xyzw);
  r0.y = vConst.z * v1.x;
  r0.y = vPhaze.w * r0.y;
  o0.x = r0.y * r0.x;
  o1.z = 1;
  r0.y = dot(v0.xyz, mLC[0].xyz);
  r0.z = dot(v0.xyz, mLC[2].xyz);
  o1.x = r0.y / r0.z;
  r0.y = dot(v0.xyz, mLC[1].xyz);
  o1.y = r0.y / r0.z;
  r0.y = cmp(r0.z < 0);
  o1.w = r0.y ? -1 : 1;
  r0.y = vConst.z * v2.w;
  
  o1.x+=stereo.x*o1.w;
  
  o2.w = r0.y * r0.x;
  o2.xyz = v2.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v0.6.163 on Sat May 18 23:43:36 2024
//
//
// Buffer Definitions:
//
// cbuffer $Globals
// {
//
//   float4 mLC[3];                     // Offset:    0 Size:    48
//   float4 vConst;                     // Offset:   48 Size:    16
//   float4 vPhaze;                     // Offset:   64 Size:    16
//   float4 vTable[16];                 // Offset:   80 Size:   256
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyz
// PSIZE                    0   x           1     NONE   float   x
// COLOR                    0   xyzw        2     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// PSIZE                    0   x           0     NONE   float   x
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[21], dynamicIndexed
dcl_input v0.xyz
dcl_input v1.x
dcl_input v2.xyzw
dcl_output o0.x
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 3
add r0.x, v2.w, cb0[4].x
frc r0.y, r0.x
mul r0.x, r0.x, cb0[4].y
frc r0.x, r0.x
mad r0.y, r0.y, cb0[4].y, -r0.x
ftoi r0.y, r0.y
mad r1.xyzw, r0.xxxx, l(3.000000, 3.000000, 3.000000, 3.000000), l(1.000000, 0.000000, -1.000000, -2.000000)
mad r2.xyzw, r0.xxxx, l(-3.000000, -3.000000, -3.000000, -3.000000), l(1.000000, 2.000000, 3.000000, 4.000000)
min_sat r1.xyzw, r1.xyzw, r2.xyzw
dp4 r0.x, cb0[r0.y + 5].xyzw, r1.xyzw
mul r0.y, v1.x, cb0[3].z
mul r0.y, r0.y, cb0[4].w
mul o0.x, r0.x, r0.y
mov o1.z, l(1.000000)
dp3 r0.y, v0.xyzx, cb0[0].xyzx
dp3 r0.z, v0.xyzx, cb0[2].xyzx
div o1.x, r0.y, r0.z
dp3 r0.y, v0.xyzx, cb0[1].xyzx
div o1.y, r0.y, r0.z
lt r0.y, r0.z, l(0.000000)
movc o1.w, r0.y, l(-1.000000), l(1.000000)
mul r0.y, v2.w, cb0[3].z
mul o2.w, r0.x, r0.y
mov o2.xyz, v2.xyzx
ret
// Approximately 25 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
