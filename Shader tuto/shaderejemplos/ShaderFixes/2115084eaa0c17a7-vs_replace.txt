//DQB2 snow storm screen effect 2. Also normal snowflakes.
// ---- Created with 3Dmigoto v0.6.163 on Mon Jul 15 18:23:38 2024

cbuffer _Globals : register(b0)
{
  float4 litDir : packoffset(c13);
  float4 litCol : packoffset(c14);
  float4 ambLit : packoffset(c15);
  row_major float4x4 mW2P : packoffset(c0);
  float4 fog : packoffset(c4);
}



// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  float4 v0 : POSITION0,
  float4 v1 : COLOR0,
  float2 v2 : TEXCOORD0,
  float4 v3 : COLOR1,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float4 o3 : TEXCOORD2)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;
  
  float4 stereo = StereoParams.Load(0);
  
  r0.xyzw = mW2P._m10_m11_m12_m13 * v0.yyyy;
  r0.xyzw = v0.xxxx * mW2P._m00_m01_m02_m03 + r0.xyzw;
  r0.xyzw = v0.zzzz * mW2P._m20_m21_m22_m23 + r0.xyzw;
  r0.xyzw = mW2P._m30_m31_m32_m33 + r0.xyzw;
  o0.xyzw = r0.xyzw;
  
  if (o0.w>=0.2999 && o0.w<0.3001) {
	o0.x-=stereo.x*(o0.w-stereo.y);
  }
  
  o3.z = r0.w * fog.x + fog.y;
  o1.xyz = v0.xyz;
  o1.w = 1;
  r0.xyz = v1.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r0.w = dot(litDir.xyz, r0.xyz);
  r1.xyz = v3.xyz * float3(2,2,2) + float3(-1,-1,-1);
  r1.w = dot(litDir.xyz, r1.xyz);
  r0.w = cmp(r1.w >= r0.w);
  r0.xyz = r0.www ? r0.xyz : r1.xyz;
  r0.x = saturate(dot(r0.xyz, -litDir.xyz));
  r0.xyz = litCol.xyz * r0.xxx;
  r1.xyz = float3(5.96046448e-08,1.52587891e-05,0.00390625) * v0.www;
  r1.xyz = frac(r1.xyz);
  r0.xyz = r1.xyz * r0.xyz;
  o2.xyz = ambLit.xyz * r1.xyz + r0.xyz;
  o2.w = v1.w;
  r0.x = cmp(v3.w >= 0.501960814);
  r0.y = -0.501960814 + v3.w;
  r0.x = r0.x ? r0.y : v3.w;
  r0.x = r0.x * 255 + -16;
  o3.w = exp2(r0.x);
  o3.xy = v2.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//   using 3Dmigoto v0.6.163 on Mon Jul 15 18:23:38 2024
//
//
// Buffer Definitions:
//
// cbuffer $Globals
// {
//
//   float4 litDir;                     // Offset:  208 Size:    16
//   float4 litCol;                     // Offset:  224 Size:    16
//   float4 ambLit;                     // Offset:  240 Size:    16
//   row_major float4x4 mW2P;           // Offset:    0 Size:    64
//   float4 fog;                        // Offset:   64 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
// COLOR                    1   xyzw        3     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_input v3.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 2
mul r0.xyzw, v0.yyyy, cb0[1].xyzw
mad r0.xyzw, v0.xxxx, cb0[0].xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, cb0[2].xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, cb0[3].xyzw
mov o0.xyzw, r0.xyzw
mad o3.z, r0.w, cb0[4].x, cb0[4].y
mov o1.xyz, v0.xyzx
mov o1.w, l(1.000000)
mad r0.xyz, v1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, cb0[13].xyzx, r0.xyzx
mad r1.xyz, v3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, cb0[13].xyzx, r1.xyzx
ge r0.w, r1.w, r0.w
movc r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
dp3_sat r0.x, r0.xyzx, -cb0[13].xyzx
mul r0.xyz, r0.xxxx, cb0[14].xyzx
mul r1.xyz, v0.wwww, l(5.960464478E-08, 0.0000152587891, 0.00390625000, 0.000000)
frc r1.xyz, r1.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
mad o2.xyz, cb0[15].xyzx, r1.xyzx, r0.xyzx
mov o2.w, v1.w
ge r0.x, v3.w, l(0.501960814)
add r0.y, v3.w, l(-0.501960814)
movc r0.x, r0.x, r0.y, v3.w
mad r0.x, r0.x, l(255.000000), l(-16.000000)
exp o3.w, r0.x
mov o3.xy, v2.xyxx
ret
// Approximately 28 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
